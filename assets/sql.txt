CREATE TABLE Answers (
    ID int NOT NULL AUTO_INCREMENT,
    Header varchar(255) NOT NULL,
    Text varchar(4096), 
    Images varchar(4096),
    PRIMARY KEY (id)
); 

CREATE TABLE Queries (
    ID int NOT NULL AUTO_INCREMENT,
    Question varchar(255) NOT NULL,
    BeginnerID int NOT NULL,
    ExperiencedID int NOT NULL,
    PRIMARY KEY (id),
    CONSTRAINT FK_BEGINNER
    FOREIGN KEY (BeginnerID) references Answers(ID),
    CONSTRAINT FK_Experienced
    FOREIGN KEY (ExperiencedID) references Answers(ID)
); 

Insert into Queries(Question,BeginnerID,ExperiencedID)
Values ('test',1,2);

INSERT INTO Answers (Header)
VALUES ('test experienced');

User  Support
Grant Select on both Queries and Answers

INSERT INTO Answers (Header, Text, Images)
VALUES ('<h3>FOR LOOP IN JAVA</h3>', '<p>The for statement provides a compact way to iterate over a range of values. Programmers often refer to it as the "for loop" because of the way in which it repeatedly loops until a particular condition is satisfied. The general form of the for statement can be seen in Figure 1.</p><p>When using this version of the for statement, keep in mind that:</p>
<p>
<li>The <em>initialization</em> expression initializes the loop; it's executed once, as the loop begins.</li>
<li>When the <em>termination</em> expression evaluates to <code>false</code>, the loop terminates.</li>
<li>The <em>increment</em> expression is invoked after each iteration through the loop; it is perfectly acceptable for this expression to increment <i>or</i> decrement a value.</li>
</p>
<p> Figure 2 shows an example that uses the general form of the for statement to print the numbers 1 through 10 to standard output, which can be seen in Figure 3.</p>
','<p>Figure 1: Structure</p><img src="assets/images/for_1.png">
<p>Figure 2: Example Program</p><img src="assets/images/for_2.png">
<p>Figure 3: Output of Figure 2</p><img src="assets/images/for_3.png">

')

INSERT INTO Answers (Header, Text, Images)
VALUES ('<h3>IF STATEMENT IN JAVA</h3>', '<p>The if statement is the most basic of all the control flow statements. It tells your program to execute a certain section of code only if a particular test evaluates to true. </p>
<p>If the test evaluates to false, control jumps to the end of the if statement.</p>
<p>else if is used for each statement to be evalulated after the first if statement. The else statement is used to catch all other conditions (fallback).</p>
','
<p>Figure 1: Syntax</p><img src="assets/images/if_1.png">
<p>Figure 2: Example</p><img src="assets/images/if_2.png">
')